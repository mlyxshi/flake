name: "Kexec"
on:
  workflow_dispatch:
    inputs:
      ip:
        description: 'Ip or Domain'
        type: string
        required: true
      user:
        description: 'SSH User'
        required: true
        default: 'root'
        type: choice
        options:
          - root
          - ubuntu

env:
  SSH: ssh -o StrictHostKeyChecking=no
  HOST: root@${{ inputs.ip }}

jobs:

  kexec:
    runs-on: ubuntu-latest
    steps:
    - run: |
        mkdir -m 0755  ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
    - run: |
        until $SSH -o ConnectTimeout=10 ${{ inputs.user }}@${{ inputs.ip }}
        do
          echo "Server Not Reachable, Waiting..."
          sleep 5
        done

    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/$(uname -m)/kexec' 
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/$(uname -m)/initrd'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/$(uname -m)/kernel'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'chmod +x ./kexec'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} "./kexec --kexec-syscall-auto --load ./kernel --initrd=./initrd --append=\"systemd.set_credential_binary=github-private-key:${{ secrets.SSH_PRIVATE_KEY_BASE64 }} systemd.hostname=systemd-initrd systemd.mount-extra=tmpfs:/:tmpfs:mode=0755\""
    - name: Run kexec
      # If server doesn't reply, ServerAliveInterval option will kill ssh, and emit error 
      # This is the normal behaviour as expected, so let github workflow treat error as success 
      continue-on-error: true 
      run: |
        if [ ${{ inputs.user }} = root ]
        then
          $SSH -o ServerAliveInterval=5 -o ServerAliveCountMax=2 ${{ inputs.user }}@${{ inputs.ip }} './kexec -e'
        else
          $SSH -o ServerAliveInterval=5 -o ServerAliveCountMax=2 ${{ inputs.user }}@${{ inputs.ip }} 'sudo ./kexec -e'
        fi
