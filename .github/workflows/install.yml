name: "Install OS"
on:
  workflow_dispatch:
    inputs:
      ip:
        description: 'ip or domain'
        type: string
        required: true
      host:
        description: 'os config hostname'
        type: string
        required: true
      user:
        description: 'ssh user'
        required: true
        default: 'root'
        type: choice
        options:
          - root
          - ubuntu
      arch:
        required: true
        default: 'x86_64'
        type: choice
        options:
          - x86_64
          - aarch64


env:
  SSH: ssh -o StrictHostKeyChecking=no

jobs:

  Kexec:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 1.5
    steps:
    - run: |
        mkdir -m 0755  ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
    - run: |
        if [ ${{ inputs.user }} = root ]
        then
          $SSH root@${{ inputs.ip }} 'curl -sL http://hydra.mlyxshi.com/job/nixos/flake/kexec-$(uname -m)/latest/download-by-type/file/kexec-script | bash -s'
        else
          $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -sL http://hydra.mlyxshi.com/job/nixos/flake/kexec-$(uname -m)/latest/download-by-type/file/kexec-script | sudo bash -s'
        fi


  Build:
    if: inputs.arch == 'x86_64'
    runs-on: ubuntu-latest
    steps:

    - run: |
        mkdir -m 0755  ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

    - uses: actions/checkout@master
    - uses: DeterminateSystems/nix-installer-action@main

    - run: |
        outPath=$(nix build --no-link --print-out-paths .#nixosConfigurations.${{ inputs.host }}.config.system.build.toplevel)
        echo "outPath=$outPath" >> "$GITHUB_ENV"
    - run: |
        $SSH root@${{ inputs.ip }}
        while test $? -gt 0
        do
          sleep 5 
          echo "Wait kexec loading, Trying again..."
          $SSH root@${{ inputs.ip }}
        done
    - run: $SSH root@${{ inputs.ip }} parted --script /dev/sda mklabel gpt mkpart "BOOT" fat32  1MiB  512MiB mkpart "NIXOS" ext4 512MiB 100% set 1 esp on
    - run: $SSH root@${{ inputs.ip }} mkfs.fat -F 32 /dev/disk/by-partlabel/BOOT
    - run: $SSH root@${{ inputs.ip }} mkfs.ext4 -F /dev/disk/by-partlabel/NIXOS
    - run: $SSH root@${{ inputs.ip }} mkdir -p /mnt
    - run: $SSH root@${{ inputs.ip }} mount /dev/disk/by-partlabel/NIXOS /mnt
    - run: $SSH root@${{ inputs.ip }} mount --mkdir /dev/disk/by-partlabel/BOOT /mnt/boot

    - run: nix copy --substitute-on-destination --to ssh://root@${{ inputs.ip }}?remote-store=local?root=/mnt $outPath
      env:
        NIX_SSHOPTS: -o StrictHostKeyChecking=no   

    - run: $SSH root@${{ inputs.ip }} nix-env --store /mnt -p /mnt/nix/var/nix/profiles/system --set $outPath
    - run: $SSH root@${{ inputs.ip }} mkdir /mnt/{etc,tmp}
    - run: $SSH root@${{ inputs.ip }} touch /mnt/etc/NIXOS
    - run: $SSH root@${{ inputs.ip }} mkdir -p /mnt/persist/sops/ 
    - run: $SSH root@${{ inputs.ip }} curl -sLo /mnt/persist/sops/key ${{ secrets.AGE_KEY_URL }}
    - run: $SSH root@${{ inputs.ip }} NIXOS_INSTALL_BOOTLOADER=1 nixos-enter --root /mnt -- /run/current-system/bin/switch-to-configuration boot
    - run: $SSH root@${{ inputs.ip }} reboot

    - run: curl https://api.day.app/${{ secrets.BARK_KEY }}/NixOS%20Install%20Done/${{ inputs.host }}?icon=https://hydra.nixos.org/logo

