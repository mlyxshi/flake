name: "Install OS"
on:
  workflow_dispatch:
    inputs:
      ip:
        description: 'Ip or Domain'
        type: string
        required: true
      flakeAttr:
        description: 'OS Config Hostname'
        type: string
        required: true
      user:
        description: 'SSH User'
        required: true
        default: 'root'
        type: choice
        options:
          - root
          - ubuntu

env:
  SSH: ssh -o StrictHostKeyChecking=no
  HOST: root@${{ inputs.ip }}

jobs:

  kexec:
    runs-on: ubuntu-latest
    steps:
    - run: |
        mkdir -m 0755  ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
    - run: |
        until $SSH -o ConnectTimeout=10 ${{ inputs.user }}@${{ inputs.ip }}
        do
          echo "Server Not Reachable, Waiting..."
          sleep 5
        done

    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/$(uname -m)/kexec' 
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/$(uname -m)/initrd'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/$(uname -m)/kernel'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'chmod +x ./kexec'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} "./kexec --kexec-syscall-auto --load ./kernel --initrd=./initrd --append=\"github-private-key=${{ secrets.SSH_PRIVATE_KEY_BASE64 }}\""

    - name: Run kexec
      # If server doesn't reply, ServerAliveInterval option will kill ssh, and emit error 
      # This is the normal behaviour as expected, so let github workflow treat error as success 
      continue-on-error: true 
      run: |
        if [ ${{ inputs.user }} = root ]
        then
          $SSH -o ServerAliveInterval=5 -o ServerAliveCountMax=2 ${{ inputs.user }}@${{ inputs.ip }} './kexec -e'
        else
          $SSH -o ServerAliveInterval=5 -o ServerAliveCountMax=2 ${{ inputs.user }}@${{ inputs.ip }} 'sudo ./kexec -e'
        fi

  install:
    runs-on: ubuntu-latest
    needs: kexec
    steps:
    - run: |
        mkdir -m 0755  ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

    - run: |
        until $SSH -o ConnectTimeout=10 $HOST ls /etc/initrd-release
        do
          echo "Kexec Environment Not Reachable, Waiting..."
          sleep 5
        done
    
    - run: $SSH $HOST make-partitions /dev/sda
    - run: $SSH $HOST mount-partitions /dev/sda

    # for emergency reboot
    - run: $SSH $HOST curl -Lo /mnt/boot/arm.efi https://boot.netboot.xyz/ipxe/netboot.xyz-arm64.efi

    # https://github.com/NixOS/nixpkgs/commit/7a586794d4378d7a6432192700a4706083d58388
    - run: $SSH $HOST "nix build --build-users-group '' --store /mnt --profile /mnt/nix/var/nix/profiles/system github:mlyxshi/flake#nixosConfigurations.${{ inputs.flakeAttr }}.config.system.build.toplevel"

    - run: $SSH $HOST mkdir /mnt/{etc,tmp}
    - run: $SSH $HOST touch /mnt/etc/NIXOS
    - run: $SSH $HOST NIXOS_INSTALL_BOOTLOADER=1 nixos-enter --root /mnt -- /run/current-system/bin/switch-to-configuration boot
    - run: $SSH $HOST reboot

    - run: curl https://api.day.app/${{ secrets.BARK_KEY }}/${{ inputs.flakeAttr }}?group=NixOS&icon=https://hydra.nixos.org/logo