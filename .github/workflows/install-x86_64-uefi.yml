name: "Install x86_64 UEFI"
on:
  workflow_dispatch:
    inputs:
      ip:
        description: 'Ip or Domain'
        type: string
        required: true
      flakeAttr:
        description: 'OS Config Hostname'
        type: string
        required: true
      user:
        description: 'SSH User'
        required: true
        default: 'root'
        type: choice
        options:
          - root
          - ubuntu

env:
  SSH: ssh -o StrictHostKeyChecking=no
  HOST: root@${{ inputs.ip }}

jobs:

  kexec:
    runs-on: ubuntu-latest
    steps:
    - run: |
        mkdir -m 0755  ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
    - run: |
        until $SSH -o ConnectTimeout=10 ${{ inputs.user }}@${{ inputs.ip }}
        do
          echo "Server Not Reachable, Waiting..."
          sleep 5
        done

    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/x86_64/kexec' 
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/x86_64/initrd'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'curl -LO https://github.com/mlyxshi/flake/releases/download/x86_64/kernel'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} 'chmod +x ./kexec'
    - run: $SSH ${{ inputs.user }}@${{ inputs.ip }} "./kexec --kexec-syscall-auto --load ./kernel --initrd=./initrd"

    - name: Run kexec
      # If server doesn't reply, ServerAliveInterval option will kill ssh, and emit error 
      # This is the normal behaviour as expected, so let github workflow treat error as success 
      continue-on-error: true 
      run: |
        if [ ${{ inputs.user }} = root ]
        then
          $SSH -o ServerAliveInterval=5 -o ServerAliveCountMax=4 ${{ inputs.user }}@${{ inputs.ip }} './kexec -e'
        else
          $SSH -o ServerAliveInterval=5 -o ServerAliveCountMax=4 ${{ inputs.user }}@${{ inputs.ip }} 'sudo ./kexec -e'
        fi

  install:
    runs-on: ubuntu-latest
    steps:
    - run: |
        mkdir -m 0755  ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

        cat > ~/.ssh/ssh_config <<EOF
        Host github.com
          User git
          IdentityFile ~/.ssh/id_ed25519
        EOF

    - uses: actions/checkout@master
    - uses: DeterminateSystems/nix-installer-action@main

    - run: |
        outPath=$(nix build --no-link --print-out-paths .#nixosConfigurations.${{ inputs.flakeAttr }}.config.system.build.toplevel)
        echo "outPath=$outPath" >> "$GITHUB_ENV"

    - run: |
        until $SSH -o ConnectTimeout=10 $HOST ls /etc/initrd-release
        do
          echo "Kexec Environment Not Reachable, Waiting..."
          sleep 5
        done
    # https://superuser.com/questions/1572410/what-is-the-purpose-of-the-linux-home-partition-code-8302
    - run: $SSH $HOST sgdisk --zap-all /dev/sda
    - run: $SSH $HOST sgdisk --new=0:0:+512M --typecode=0:ef00 /dev/sda
    - run: $SSH $HOST sgdisk --new=0:0:0 --typecode=0:4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709 /dev/sda

    - run: $SSH $HOST mkfs.fat -F 32 /dev/sda1
    - run: $SSH $HOST mkfs.ext4 -F /dev/sda2
    - run: $SSH $HOST mkdir -p /mnt
    - run: $SSH $HOST mount /dev/sda2 /mnt
    - run: $SSH $HOST mount --mkdir /dev/sda1 /mnt/boot
    
    # --substitute-on-destination will consume more memory
    - run: NIX_SSHOPTS='-o StrictHostKeyChecking=no' nix copy --to ssh://$HOST?remote-store=local?root=/mnt $outPath
 
    - run: $SSH $HOST nix-env --store /mnt -p /mnt/nix/var/nix/profiles/system --set $outPath
    - run: $SSH $HOST mkdir /mnt/{etc,tmp}
    - run: $SSH $HOST touch /mnt/etc/NIXOS
    - run: $SSH $HOST NIXOS_INSTALL_BOOTLOADER=1 nixos-enter --root /mnt -- /run/current-system/bin/switch-to-configuration boot
    - run: $SSH $HOST reboot

    - run: curl "https://api.day.app/${{ secrets.BARK_KEY }}/NixOS%20Install%20Done/${{ inputs.flakeAttr }}?group=NixOS&icon=https://hydra.nixos.org/logo"


    